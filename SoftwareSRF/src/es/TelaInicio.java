/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es;

import es.funcoes.Conexao;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author flavi
 */
public class TelaInicio extends javax.swing.JFrame {

    private TelaInicio telaAnterior;

    /**
     * Creates new form TelaInicio
     */
    public TelaInicio() {
        initComponents();

        setLocationRelativeTo(null); //projela tela centralizada
        setIconImage(new ImageIcon(getClass().getResource("/es/imagens/logomtbranco2.png")).getImage()); //icone da empresa 
        this.setExtendedState(MAXIMIZED_BOTH);

        //DATA
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        dataLabel.setText(formato.format(dataSistema));
        Timer timer = new Timer(1000, new hora());
        timer.start();

    }

    class hora implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Calendar now = Calendar.getInstance();
            horaLabel.setText(String.format("%1$tH:%1$tM:%1$tS", now));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jdbInicio = new javax.swing.JDesktopPane(){

            Image image = new ImageIcon(getClass().getResource("/es/imagens/fundo2.jpg")).getImage();

            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            }

        };
        jPanel1 = new javax.swing.JPanel();
        horaLabel = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        GerarBackup = new javax.swing.JMenuItem();
        RestauraBackup = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SRF");

        jdbInicio.setBorder(null);

        javax.swing.GroupLayout jdbInicioLayout = new javax.swing.GroupLayout(jdbInicio);
        jdbInicio.setLayout(jdbInicioLayout);
        jdbInicioLayout.setHorizontalGroup(
            jdbInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        jdbInicioLayout.setVerticalGroup(
            jdbInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        horaLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        dataLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(horaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horaLabel)
                    .addComponent(dataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jMenu1.setText("Paciente");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/adduser.png"))); // NOI18N
        jMenuItem1.setText("Cadastrar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/lupa.png"))); // NOI18N
        jMenuItem2.setText("Consultar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/edit.png"))); // NOI18N
        jMenuItem3.setText("Editar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/remove.png"))); // NOI18N
        jMenuItem4.setText("Remover");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Funcion√°rio(a)");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/adduser.png"))); // NOI18N
        jMenuItem6.setText("Cadastrar");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/lupa.png"))); // NOI18N
        jMenuItem7.setText("Consultar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/edit.png"))); // NOI18N
        jMenuItem8.setText("Editar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/remove.png"))); // NOI18N
        jMenuItem9.setText("Remover");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Consulta");

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/consulta.png"))); // NOI18N
        jMenuItem11.setText("Cadastrar Consulta");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem11);

        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/edit.png"))); // NOI18N
        jMenuItem12.setText("Alterar Consulta");
        jMenu5.add(jMenuItem12);

        jMenuBar1.add(jMenu5);

        jMenu3.setText("Gerar Relat√≥rio");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/gerarel.png"))); // NOI18N
        jMenuItem10.setText("Realat Agenda");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/gerarel.png"))); // NOI18N
        jMenuItem5.setText("Relat Paciente");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/gerarel.png"))); // NOI18N
        jMenuItem13.setText("Relat Funcionario");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ferramentas");

        GerarBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/backup.png"))); // NOI18N
        GerarBackup.setText("Efetuar Backup do Banco de Dados");
        GerarBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GerarBackupActionPerformed(evt);
            }
        });
        jMenu4.add(GerarBackup);

        RestauraBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/icones/resbackup.png"))); // NOI18N
        RestauraBackup.setText("Restaura Backup do Banco de Dados");
        RestauraBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestauraBackupActionPerformed(evt);
            }
        });
        jMenu4.add(RestauraBackup);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdbInicio, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jdbInicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //this.setEnabled(false);
        //new CadastrarPaciente(this).setVisible(true);
        TesteCadastroPaciente obj = null;

        try {
            obj = new TesteCadastroPaciente();
        } catch (ParseException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String busca;
        busca = JOptionPane.showInputDialog("Digite o documento do Paciente.", 0);
        if (busca == null) {
            JOptionPane.showInputDialog(null, "Campo vazio!");
            return;
        }

        /*PreparedStatement ps = null;
        try {
        
        String sql = "select * from projetosrf.paciente";
        ps = Conexao.con.prepareStatement(sql);
        ps.executeQuery();
        try (ResultSet rs = ps.getResultSet()) {
        while (rs.next()) {
        
        if (busca.equals(rs.getString("cpf"))) {
        
        TesteCadastroPacienteConsulta obj = null;
        
        try {
        obj = new TesteCadastroPacienteConsulta(rs);
        } catch (ParseException ex) {
        Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
        Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
        Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
        Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
        obj.setSelected(true);
        //diz que a janela interna √© maximiz√°vel
        obj.setMaximizable(true);
        //set o tamanho m√°ximo dela, que depende da janela pai
        obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }
        
        } else {
        
        }
        
        }
        }

            ps.close();

            JOptionPane.showMessageDialog(null, "Cliente n√£o encontrado.");

        } catch (SQLException e) {
            // Erro se n√£o consegue conex√£o com o database
            System.out.printf("nao2");
        }*/

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        String busca;
        busca = JOptionPane.showInputDialog("Digite o documento do Paciente.", 0);
        if (busca == null) {
            JOptionPane.showInputDialog(null, "Campo vazio!");
            return;
        }

        PreparedStatement ps = null;
        try {

            String sql = "select * from projetosrf.paciente";
            ps = Conexao.con.prepareStatement(sql);
            ps.executeQuery();
            try (ResultSet rs = ps.getResultSet()) {
                while (rs.next()) {

                    if (busca.equals(rs.getString("cpf"))) {

                    } else {

                    }

                }
            }

            ps.close();

            JOptionPane.showMessageDialog(null, "Paciente n√£o encontrado.");

        } catch (SQLException e) {
            // Erro se n√£o consegue conex√£o com o database
            System.out.printf("nao2");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        String busca;
        busca = JOptionPane.showInputDialog("Digite o documento do Funcionario:", 0);
        if (busca == null) {
            JOptionPane.showMessageDialog(null, "Campo Vazio");
            return;
        }

        PreparedStatement ps = null;
        try {

            String sql = "select * from projetosrf.funcionario INNER JOIN funcao ON funcionario.id_func = funcao.id_func";
            ps = Conexao.con.prepareStatement(sql);
            ps.executeQuery();
            try (ResultSet rs = ps.getResultSet()) {
                while (rs.next()) {

                    if (busca.equals(rs.getString("cpf"))) {

                        TesteCadastroFuncionarioConsultar obj = null;

                        try {
                            obj = new TesteCadastroFuncionarioConsultar(rs);
                        } catch (ParseException ex) {
                            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        jdbInicio.add(obj);
                        obj.setVisible(true);
                        try {
                            obj.setSelected(true);
                            //diz que a janela interna √© maximiz√°vel   
                            obj.setMaximizable(true);
                            //set o tamanho m√°ximo dela, que depende da janela pai   
                            obj.setMaximum(true);
                        } catch (java.beans.PropertyVetoException e) {
                        }
                        return;

                    } else {

                    }

                }
            }

            ps.close();
            JOptionPane.showMessageDialog(null, "Funcionario n√£o encontrado.");

        } catch (SQLException e) {
            // Erro se n√£o consegue conex√£o com o database
            System.out.printf("nao2");
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed


    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        String busca;
        busca = JOptionPane.showInputDialog("Digite o documento do Funcionario:", 0);
        if (busca == null) {
            JOptionPane.showMessageDialog(null, "Campo vazio!");
            return;
        }

        PreparedStatement ps = null;
        try {

            String sql = "select * from projetosrf.funcionario";
            ps = Conexao.con.prepareStatement(sql);
            ps.executeQuery();
            try (ResultSet rs = ps.getResultSet()) {
                while (rs.next()) {

                    if (busca.equals(rs.getString("cpf"))) {
                        switch (JOptionPane.showConfirmDialog(null, "Deseja remover o funcionario: " + rs.getString("nome") + "?")) {
                            case 0:
                                sql = "DELETE FROM `funcionario` WHERE cpf = " + busca + " ";
                                ps = Conexao.con.prepareStatement(sql);
                                ps.executeUpdate();
                                ps.close();
                                JOptionPane.showMessageDialog(null, "Funcionario Removido.");
                                return;

                            case 1:
                                JOptionPane.showMessageDialog(null, "Funcionario n√£o removido!");
                                return;

                            case 2:
                                JOptionPane.showMessageDialog(null, "Funcionario n√£o removido!");
                                return;

                        }
                    } else {

                    }

                }
                JOptionPane.showMessageDialog(null, "Funcionario n√£o encontrado.");
            }

        } catch (SQLException e) {
            // Erro se n√£o consegue conex√£o com o database
            System.out.printf("Remover/erro conexao");
        }

    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        TelaGerarRelatorioAgenda obj = null;

        obj = new TelaGerarRelatorioAgenda();

        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        TesteCadastroFuncionario obj = null;

        try {
            obj = new TesteCadastroFuncionario();
        } catch (ParseException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }

        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }

    }//GEN-LAST:event_jMenuItem6ActionPerformed


    private void GerarBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GerarBackupActionPerformed
        FileWriter arq = null;

        try {
            arq = new FileWriter("C:\\BACKUPBD\\backup.bat");
        } catch (IOException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }

        PrintWriter gravarArq = new PrintWriter(arq);

        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();
        String data = dateFormat.format(date);

        gravarArq.printf("@echo off%n echo Realizando backup do MySQL... %n"
                + "\"C:\\xampp\\mysql\\bin\\mysqldump.exe\" -u root --databases projetosrf > \"C:\\BACKUPBD\\" + data + ".sql%n\""
                + "echo concluido com sucesso");
        try {
            arq.close();
        } catch (IOException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Runtime.getRuntime().exec("\"C:\\BACKUPBD\\backup.bat\"");
        } catch (IOException ex) {
            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Backup gerado em C:\\BACKUPBD\\" + data + ".sql");

    }//GEN-LAST:event_GerarBackupActionPerformed

    private void RestauraBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestauraBackupActionPerformed
        JOptionPane.showMessageDialog(null, "Para restaurar um backup selecione um arquivo 'data'.sql, com a data que pretende restaurar seu banco de dados");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Filtro .sql", "sql");
        jFileChooser1.setFileFilter(filtro);
        int returnVal = jFileChooser1.showOpenDialog(this);
        String Caminho;

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Caminho = jFileChooser1.getSelectedFile().getPath();
            try {
                FileWriter arq = null;
                try {
                    arq = new FileWriter("C:\\BACKUPBD\\restaurabackup.bat");
                } catch (IOException ex) {
                    Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                }

                PrintWriter gravarArq = new PrintWriter(arq);

                gravarArq.printf("@echo off%n echo Realizando backup do MySQL... %n"
                        + "\"C:\\xampp\\mysql\\bin\\mysql.exe\" -u root -e \"CREATE DATABASE projetosrf\"%n"
                        + "\"C:\\xampp\\mysql\\bin\\mysql.exe\" -u root projetosrf < \"" + Caminho + "\"%n"
                        + "echo");
                try {
                    arq.close();
                } catch (IOException ex) {
                    Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                }

                Runtime.getRuntime().exec("\"C:\\BACKUPBD\\restaurabackup.bat\"");

            } catch (IOException ex) {
                Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Backup restaurado");
        } else {

        }
    }//GEN-LAST:event_RestauraBackupActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        TelaCadastroConsulta obj = null;
        obj = new TelaCadastroConsulta();

        jdbInicio.add(obj);
        obj.setVisible(true);

        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }

    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        String busca;
        busca = JOptionPane.showInputDialog("Digite o documento do Funcionario:", 0);
        if (busca == null) {
            JOptionPane.showMessageDialog(null, "Campo vazio!");
            return;
        }

        PreparedStatement ps = null;
        try {

            String sql = "select * from projetosrf.funcionario INNER JOIN funcao ON funcionario.id_func = funcao.id_func";
            ps = Conexao.con.prepareStatement(sql);
            ps.executeQuery();
            try (ResultSet rs = ps.getResultSet()) {
                while (rs.next()) {

                    if (busca.equals(rs.getString("cpf"))) {

                        TesteCadastroFuncionarioAlterar obj = null;

                        try {
                            obj = new TesteCadastroFuncionarioAlterar(rs);
                        } catch (ParseException ex) {
                            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(TelaInicio.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        jdbInicio.add(obj);
                        obj.setVisible(true);
                        try {
                            obj.setSelected(true);
                            //diz que a janela interna √© maximiz√°vel   
                            obj.setMaximizable(true);
                            //set o tamanho m√°ximo dela, que depende da janela pai   
                            obj.setMaximum(true);
                        } catch (java.beans.PropertyVetoException e) {
                        }
                        return;

                    } else {

                    }

                }
            }

            ps.close();
            JOptionPane.showMessageDialog(null, "Funcionario n√£o encontrado.");

        } catch (SQLException e) {
            // Erro se n√£o consegue conex√£o com o database
            System.out.printf("nao2");
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        TelaGerarRelatorioPaciente obj = null;

        obj = new TelaGerarRelatorioPaciente();

        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        TelaGerarRelatorioFuncionario obj = null;

        obj = new TelaGerarRelatorioFuncionario();

        jdbInicio.add(obj);
        obj.setVisible(true);
        try {
            obj.setSelected(true);
            //diz que a janela interna √© maximiz√°vel   
            obj.setMaximizable(true);
            //set o tamanho m√°ximo dela, que depende da janela pai   
            obj.setMaximum(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem GerarBackup;
    public javax.swing.JMenuItem RestauraBackup;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JLabel horaLabel;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JDesktopPane jdbInicio;
    // End of variables declaration//GEN-END:variables
}
